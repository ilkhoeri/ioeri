import { inter, kanit, montserrat, robotoMono } from "@/components/assets/provider/font-provider";

import type { Metadata } from "next";

// import { TagAttributeScript } from "@/components/assets/scripts/tag-attribute-script";
import { ThemeProvider } from "@/components/assets/provider/theme-provider";
import { ThemeStateHidden } from "@/components/assets/theme/theme-state-hidden";
import { ScrollToggle } from "@/components/assets/toggle/scroll-toggle";
import { NavProvider } from "@/hooks/use-nav";

import { Headnav } from "@/components/assets/nav-head/headnav";
import { FootNav } from "@/components/assets/nav-foot/footnav";

import "./globals.css";
import "./themeid-default.css";
import "./themeid-deulysiea.css";
import "./themeid-lyona.css";
import "./themeid-protanopia.css";

import "../styles/mdx.css";

export const metadata: Metadata = {
  title: {
    template: "%s | ioeri",
    default: "ioeri",
  },
  applicationName: "ioeri",
  description: "Generated by create ioeri",
  category: "Personal Platform",
  manifest: "/manifest.json",
  generator: "ioeri",
  publisher: "ioeri",
  referrer: "origin-when-cross-origin",
  keywords: ["ioeri", "ioeri", "original", "component server", "web", "react", "ui"],
  creator: "Ilham Khoeri - ioeri",
  authors: [{ name: "ioeri" }, { name: "Khoeri Ilham", url: "https://github.com/ioeridev" }],
  robots: {
    index: true,
    follow: true,
    nocache: false,
    googleBot: {
      index: true,
      follow: true,
      noimageindex: false,
      "max-video-preview": -1,
      "max-image-preview": "large",
      "max-snippet": -1,
    },
  },
  openGraph: {
    images: "/favicon-32x32.png",
  },
  formatDetection: {
    email: false,
    address: false,
    telephone: false,
  },
  icons: {
    icon: "/favicon.ico",
    shortcut: "/favicon.ico",
    apple: "/apple-icon.png",
    other: [
      {
        rel: "icon",
        type: "image/png",
        sizes: "192x192",
        url: "/android-icon-192x192.png",
      },
      {
        rel: "icon",
        type: "image/png",
        sizes: "32x32",
        url: "/favicon-32x32.png",
      },
      {
        rel: "icon",
        type: "image/png",
        sizes: "96x96",
        url: "/favicon-96x96.png",
      },
      {
        rel: "icon",
        type: "image/png",
        sizes: "16x16",
        url: "/favicon-16x16.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "57x57",
        url: "/apple-icon-57x57.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "60x60",
        url: "/apple-icon-60x60.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "72x72",
        url: "/apple-icon-72x72.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "76x76",
        url: "/apple-icon-76x76.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "114x114",
        url: "/apple-icon-114x114.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "120x120",
        url: "/apple-icon-120x120.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "144x144",
        url: "/apple-icon-144x144.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "152x152",
        url: "/apple-icon-152x152.png",
      },
      {
        rel: "apple-touch-icon",
        sizes: "180x180",
        url: "/apple-icon-180x180.png",
      },
    ],
  },
  other: {
    "msapplication-config": "/browserconfig.xml",
    "mobile-web-app-capable": "yes",
    "apple-mobile-web-app-capable": "yes",
    "apple-mobile-web-app-status-bar-style": "default",
    "apple-mobile-web-app-title": "Berdikarier Next App",
    "format-detection": "telephone=no",
    "msapplication-TileColor": "#ffffff",
    "msapplication-TileImage": "/ms-icon-144x144.png",
    "msapplication-tap-highlight": "no",
  },
};

export const viewport = {
  minimumScale: 1,
  maximumScale: 1,
  initialScale: 1,
  userScalable: true,
  width: "device-width",
  height: "device-height",
  viewportFit: "cover",
  interactiveWidget: "overlays-content",
  themeColor: [
    { media: "(prefers-color-scheme: light)", color: "#ffffff" },
    { media: "(prefers-color-scheme: dark)", color: "#000000" },
  ],
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const attrBody = {
    className: [
      montserrat.variable,
      inter.variable,
      kanit.variable,
      robotoMono.variable,
      "antialiased overflow-x-hidden",
    ].join(" "),
  };
  return (
    <html
      lang="en"
      suppressHydrationWarning
      data-fontid="sans"
      data-themeid-light="default"
      data-themeid-dark="default"
      data-theme="default"
    >
      <head>
        <link rel="icon" sizes="any" href="/favicon.ico" />
        <link rel="shortcut icon" href="/favicon.ico" />
      </head>
      <body {...attrBody}>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
          <NavProvider hotKeys="S">
            <Headnav />

            {children}

            <FootNav />
          </NavProvider>
          <ThemeStateHidden />

          <ScrollToggle />
        </ThemeProvider>

        {/* <TagAttributeScript /> */}
      </body>
    </html>
  );
}
